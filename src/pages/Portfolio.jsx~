import React, {useState, useEffect} from "react";
import Masonry from "react-masonry-css";
import {Vibrant} from "node-vibrant";
import {motion, AnimatePresence} from "framer-motion";

const PortfolioCard = ({item}) => {
    const [imageLoaded, setImageLoaded] = useState(false);
    const [dominantColor, setDominantColor] = useState("#f0f0f0");

    useEffect(() => {
        // Récupère la couleur dominante
        Vibrant.from(item.image).getPalette().then((palette) => {
            if (palette.Vibrant) {
                setDominantColor(palette.Vibrant.hex);
            }
        });
    }, [item.image]);

    return (
        <div
            className="group relative overflow-hidden rounded-2xl bg-white shadow-sm hover:shadow-xl transition-all duration-300"
            style={{backgroundColor: imageLoaded ? "white" : dominantColor}}
        >
            <div className="relative overflow-hidden">
                <img
                    src={item.image}
                    alt={item.title}
                    className={`w-full h-auto object-cover transform group-hover:scale-105 transition-transform duration-500 ${
                        imageLoaded ? "opacity-100" : "opacity-0"
                    }`}
                    onLoad={() => setImageLoaded(true)}
                />
                <div
                    className={`absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-black/60 ${
                        imageLoaded ? "opacity-0 group-hover:opacity-100" : "opacity-100"
                    } transition-opacity duration-300`}
                >
                    <div className="absolute bottom-0 left-0 right-0 p-6 text-white">
                        <h3 className="text-lg font-bold mb-2">{item.title}</h3>
                        <p className="text-sm text-white/90">{item.description}</p>
                    </div>
                </div>
            </div>
        </div>
    );
};

const Portfolio = ({portfolioItems}) => {
    const [selectedCategory, setSelectedCategory] = useState("all");

    const categories = [
        {id: "all", name: "Tout"},
        {id: "videography", name: "Vidéographie"},
        {id: "photography", name: "Photographie"},
        {id: "graphic-design", name: "Design Graphique"},
        {id: "3d", name: "Modélisation 3D"},
        {id: "vfx", name: "Incrustation"},
        {id: "social-media", name: "Community Management"},
        {id: "web-dev", name: "Développement Web"},
        {id: "events", name: "Évènementiel"},
        {id: "decoration", name: "Décoration"},
    ];

    const breakpointColumns = {
        default: 4,
        1536: 4,
        1280: 3,
        1024: 3,
        768: 2,
        640: 1,
    };

    return (
        <div className="py-16 bg-gray-50" id="gallery">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div className="text-center mb-20">
                    <div className="inline-block">
            <span
                className="inline-block px-4 py-1 mb-4 text-[#FF4B4B] bg-[#FF4B4B]/10 rounded-full text-sm font-medium border border-[#FF4B4B]/20">
              Nos Réalisations
            </span>
                    </div>
                    <h2 className="text-6xl font-bold mb-8 text-gray-900">
                        Notre
                        <span className="relative inline-block ml-4">
              Portfolio
              <div className="absolute -bottom-2 left-0 w-full h-2 bg-[#FF4B4B] rounded-full transform skew-x-12"/>
            </span>
                    </h2>
                    <p className="text-gray-600 text-lg max-w-2xl mx-auto">
                        Découvrez nos créations à travers différents domaines d'expertise
                    </p>
                </div>

                {/* Filtres de catégories */}
                <div className="mb-12">
                    <div className="flex flex-wrap gap-4 justify-center">
                        {categories.map((category) => (
                            <button
                                key={category.id}
                                onClick={() => setSelectedCategory(category.id)}
                                className={`
                  px-6 py-3 rounded-xl text-sm font-medium transition-all duration-300
                  ${
                                    selectedCategory === category.id
                                        ? "bg-[#FF4B4B] text-white shadow-lg shadow-[#FF4B4B]/25"
                                        : "bg-white text-gray-600 hover:bg-[#FF4B4B]/10 hover:text-[#FF4B4B]"
                                }
                `}
                            >
                                {category.name}
                            </button>
                        ))}
                    </div>
                </div>

                <AnimatePresence>
                    <Masonry
                        breakpointCols={breakpointColumns}
                        className="masonry-grid"
                        columnClassName="masonry-grid_column"
                    >
                        {portfolioItems
                            .filter(
                                (item) =>
                                    selectedCategory === "all" || item.category === selectedCategory
                            )
                            .map((item) => (
                                <motion.div
                                    key={item.id}
                                    layout
                                    initial={{opacity: 0, y: 20}}
                                    animate={{opacity: 1, y: 0}}
                                    exit={{opacity: 0, y: 20}}
                                    transition={{duration: 0.3}}
                                    className="mb-4"
                                >
                                    <PortfolioCard item={item}/>
                                </motion.div>
                            ))}
                    </Masonry>
                </AnimatePresence>

                {/* Message si aucun projet */}
                {portfolioItems.filter(
                    (item) =>
                        selectedCategory === "all" || item.category === selectedCategory
                ).length === 0 && (
                    <div className="text-center py-12">
                        <p className="text-gray-600">Aucun projet dans cette catégorie pour le moment.</p>
                    </div>
                )}
            </div>
        </div>
    );
};

export default Portfolio;
