import React, {useState} from 'react';
import {Link, useLocation} from 'react-router-dom';
import {
    LocationOn,
    Phone,
    Email,
    Facebook,
    Twitter,
    Instagram,
    LinkedIn,
    Add,
    Remove
} from '@mui/icons-material';
import logo from "../assets/images/logos/logo.png";

const SocialLink = ({Icon, href}) => (
    <a
        href={href}
        className="group relative p-2"
        aria-label={`Lien vers ${href}`}
    >
        <div
            className="absolute inset-0 bg-[#FF4B4B] rounded-lg scale-0 group-hover:scale-100 transition-transform duration-300"/>
        <Icon className="relative z-10 text-[#666666] group-hover:text-white transition-colors duration-300"
              sx={{fontSize: 20}}/>
    </a>
);

const NavigationLink = ({item}) => {
    const pathMap = {
        'Accueil': '/',
        'Qui sommes-nous ?': '/a-propos',
        'Nos services': '/nos-services',
        'Portfolio': '/portfolio',
        'Contact': '/contact'
    };

    const path = pathMap[item];
    const location = useLocation();
    const active = location.pathname === path ||
        (path !== '/' && location.pathname.startsWith(path));

    return (
        <Link
            to={path}
            className={`group relative px-3 py-1.5 rounded-md transition-colors duration-300
                ${active ? 'text-[#FF4B4B]' : 'text-[#666666] hover:text-[#FF4B4B]'}`}
        >
            <div className={`absolute inset-0 bg-[#FF4B4B]/10 rounded-md 
                ${active ? 'opacity-100' : 'opacity-0 group-hover:opacity-100'} 
                transition-opacity duration-300`}
            />
            <span className="relative text-sm font-medium">{item}</span>
        </Link>
    );
};

const MobileAccordion = ({title, children, isOpen, onToggle}) => (
    <div className="border-b border-gray-200 last:border-none">
        <button
            onClick={onToggle}
            className="flex items-center justify-between w-full py-4 text-[#333333]"
        >
            <span className="font-medium">{title}</span>
            {isOpen ? <Remove/> : <Add/>}
        </button>
        <div className={`overflow-hidden transition-all duration-300 ${isOpen ? 'max-h-96 pb-4' : 'max-h-0'}`}>
            {children}
        </div>
    </div>
);

const ContactInfo = ({Icon, text}) => (
    <div className="group flex items-start space-x-3 rounded-lg py-2 transition-colors duration-300">
        <Icon className="text-[#FF4B4B] mt-1 group-hover:scale-110 transition-transform duration-300"
              sx={{fontSize: 20}}/>
        <span className="text-sm text-[#666666] group-hover:text-[#333333] transition-colors duration-300">
            {text}
        </span>
    </div>
);

const Schedule = ({day, hours}) => (
    <div className="group flex items-center justify-between p-2 rounded-lg transition-colors duration-300">
        <span className="text-sm font-medium text-[#333333]">{day}</span>
        <span className="text-sm text-[#666666]">{hours}</span>
    </div>
);

const SOCIAL_LINKS = [
    {Icon: Facebook, href: '#'},
    {Icon: Twitter, href: '#'},
    {Icon: Instagram, href: '#'},
    {Icon: LinkedIn, href: '#'}
];

const NAV_ITEMS = ['Accueil', 'Qui sommes-nous ?', 'Nos services', 'Portfolio', 'Contact'];

const SCHEDULE_ITEMS = [
    {day: 'Lundi - Vendredi', hours: '8h30 - 17h00'},
    {day: 'Samedi', hours: '9h00 - 12h00'},
    {day: 'Dimanche', hours: 'Fermé'}
];

const CONTACT_ITEMS = [
    {Icon: LocationOn, text: '123 Avenue de la République, 75001 Paris, France'},
    {Icon: Phone, text: '+33 1 23 45 67 89'},
    {Icon: Email, text: 'contact@mairie.fr'}
];

const LEGAL_LINKS = ['Mentions légales', 'Politique de confidentialité', 'Plan du site'];

const Footer = () => {
    const [openSection, setOpenSection] = useState('');
    const currentYear = new Date().getFullYear();

    const toggleSection = (section) => {
        setOpenSection(openSection === section ? '' : section);
    };

    return (
        <footer className="relative bg-gradient-to-b from-white to-gray-50">
            {/* Effet de fond décoratif */}
            <div className="absolute inset-0 overflow-hidden pointer-events-none opacity-40">
                <div className="absolute inset-0" style={{
                    backgroundImage: 'radial-gradient(circle at 1px 1px, #FF4B4B 1px, transparent 0)',
                    backgroundSize: '40px 40px',
                    opacity: '0.05'
                }}/>
            </div>

            {/* Desktop version */}
            <div className="hidden lg:block relative max-w-7xl mx-auto px-8 py-20">
                <div className="grid grid-cols-12 gap-12">
                    {/* Logo et description */}
                    <div className="col-span-4 pr-8">
                        <Link to="/" className="inline-block mb-8 group">
                            <img
                                src={logo}
                                alt="Marolook Logo"
                                className="w-12 h-12 object-contain transform transition-transform duration-300 group-hover:scale-110"
                            />
                        </Link>
                        <p className="text-gray-600 text-lg leading-relaxed mb-8">
                            Marolook, rejoignez une communauté dynamique et engagée.
                        </p>
                        <div className="flex gap-3">
                            {SOCIAL_LINKS.map((social, index) => (
                                <a
                                    key={index}
                                    href={social.href}
                                    className="group relative p-3 bg-white rounded-xl shadow-sm hover:shadow-md
                                             transition-all duration-300 hover:-translate-y-1"
                                    aria-label={`Lien vers ${social.href}`}
                                >
                                    <social.Icon
                                        className="text-gray-600 group-hover:text-[#FF4B4B] transition-colors duration-300"
                                        sx={{fontSize: 22}}
                                    />
                                </a>
                            ))}
                        </div>
                    </div>

                    {/* Navigation */}
                    <div className="col-span-3">
                        <h3 className="text-xl font-bold text-gray-800 mb-6">Navigation</h3>
                        <div className="flex flex-col gap-3">
                            {NAV_ITEMS.map(item => (
                                <NavigationLink key={item} item={item}/>
                            ))}
                        </div>
                    </div>

                    {/* Horaires */}
                    <div className="col-span-2">
                        <h3 className="text-xl font-bold text-gray-800 mb-6">Horaires</h3>
                        <div className="space-y-3 bg-white rounded-2xl p-4 shadow-sm">
                            {SCHEDULE_ITEMS.map(item => (
                                <div key={item.day}
                                     className="group hover:bg-gray-50 p-2 rounded-lg transition-colors duration-300">
                                    <p className="text-sm font-medium text-gray-800">{item.day}</p>
                                    <p className="text-sm text-gray-600">{item.hours}</p>
                                </div>
                            ))}
                        </div>
                    </div>

                    {/* Contact */}
                    <div className="col-span-3">
                        <h3 className="text-xl font-bold text-gray-800 mb-6">Contact</h3>
                        <div className="space-y-5 bg-white rounded-2xl p-6 shadow-sm">
                            {CONTACT_ITEMS.map((item, index) => (
                                <div key={index}
                                     className="group flex items-start gap-4 hover:bg-gray-50 p-3 rounded-xl
                                              transition-all duration-300">
                                    <div className="p-2 bg-[#FF4B4B]/10 rounded-lg group-hover:bg-[#FF4B4B]/20
                                                  transition-colors duration-300">
                                        <item.Icon
                                            className="text-[#FF4B4B]"
                                            sx={{fontSize: 20}}
                                        />
                                    </div>
                                    <span
                                        className="text-gray-600 group-hover:text-gray-900 transition-colors duration-300">
                                        {item.text}
                                    </span>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            </div>

            {/* Mobile version */}
            <div className="lg:hidden relative px-4 py-12">
                {/* Logo et description */}
                <div className="text-center mb-12">
                    <Link to="/" className="inline-block mb-6">
                        <img
                            src={logo}
                            alt="Marolook Logo"
                            className="w-16 h-16 object-contain mx-auto"
                        />
                    </Link>
                    <p className="text-gray-600 text-lg leading-relaxed mb-8 max-w-sm mx-auto">
                        Marolook, rejoignez une communauté dynamique et engagée.
                    </p>
                    <div className="flex justify-center gap-4">
                        {SOCIAL_LINKS.map((social, index) => (
                            <a
                                key={index}
                                href={social.href}
                                className="p-3 bg-white rounded-xl shadow-sm hover:shadow-md
                                         transition-all duration-300 hover:-translate-y-1"
                            >
                                <social.Icon
                                    className="text-gray-600 hover:text-[#FF4B4B] transition-colors duration-300"
                                    sx={{fontSize: 24}}
                                />
                            </a>
                        ))}
                    </div>
                </div>

                {/* Sections accordéon */}
                <div className="space-y-4 max-w-md mx-auto">
                    {[
                        {title: 'Navigation', content: 'navigation'},
                        {title: 'Horaires', content: 'horaires'},
                        {title: 'Contact', content: 'contact'}
                    ].map((section) => (
                        <div key={section.title}
                             className="bg-white rounded-2xl shadow-sm overflow-hidden">
                            <button
                                onClick={() => toggleSection(section.content)}
                                className="flex items-center justify-between w-full p-4 text-left"
                            >
                                <span className="text-lg font-bold text-gray-800">{section.title}</span>
                                <div className={`p-2 rounded-lg bg-gray-50 transition-colors duration-300
                                              ${openSection === section.content ? 'bg-[#FF4B4B]/10' : ''}`}>
                                    {openSection === section.content ?
                                        <Remove className="text-[#FF4B4B]"/> :
                                        <Add className="text-gray-600"/>
                                    }
                                </div>
                            </button>
                            <div className={`transition-all duration-300 ease-in-out
                                          ${openSection === section.content ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'}`}>
                                <div className="p-4 bg-gray-50">
                                    {section.content === 'navigation' && (
                                        <div className="flex flex-col gap-3">
                                            {NAV_ITEMS.map(item => (
                                                <NavigationLink key={item} item={item}/>
                                            ))}
                                        </div>
                                    )}
                                    {section.content === 'horaires' && (
                                        <div className="space-y-3">
                                            {SCHEDULE_ITEMS.map(item => (
                                                <Schedule key={item.day} {...item}/>
                                            ))}
                                        </div>
                                    )}
                                    {section.content === 'contact' && (
                                        <div className="space-y-4">
                                            {CONTACT_ITEMS.map((item, index) => (
                                                <ContactInfo key={index} {...item}/>
                                            ))}
                                        </div>
                                    )}
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            {/* Copyright et liens légaux */}
            <div className="relative border-t border-gray-200 bg-white/50 backdrop-blur-sm">
                <div className="max-w-7xl mx-auto px-6 py-8">
                    <div className="flex flex-col lg:flex-row justify-between items-center gap-6">
                        <p className="text-gray-600 text-center lg:text-left">
                            © {currentYear} Marolook - Tous droits réservés.
                        </p>
                        <div className="flex flex-wrap justify-center gap-8">
                            {LEGAL_LINKS.map(item => (
                                <Link
                                    key={item}
                                    to="#"
                                    className="text-sm text-gray-600 hover:text-[#FF4B4B]
                                             transition-colors duration-300"
                                >
                                    {item}
                                </Link>
                            ))}
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    );
};

export default Footer;