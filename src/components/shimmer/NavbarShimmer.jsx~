import React, {useState, useEffect} from 'react';
import {Link, useLocation} from 'react-router-dom';
import PhoneIcon from '@mui/icons-material/Phone';
import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
import MenuIcon from '@mui/icons-material/Menu';
import CloseIcon from '@mui/icons-material/Close';
import ChevronRightIcon from '@mui/icons-material/ChevronRight';
import NavbarShimmer from './shimmer/NavbarShimmer';
import logo from '../assets/images/logos/logo3.png';
import route from "../routes/routes";

const Navbar = () => {
    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
    const [isScrolled, setIsScrolled] = useState(false);
    const [openSubmenu, setOpenSubmenu] = useState('');
    const [submenuTimer, setSubmenuTimer] = useState(null);
    const [mobileSubmenu, setMobileSubmenu] = useState('');
    const [isLoading, setIsLoading] = useState(true);
    const location = useLocation();

    const navItems = [
        {
            path: route.home,
            label: 'Accueil',
            showArrow: false
        },
        {
            path: '/commune',
            label: 'La commune',
            showArrow: true,
            subItems: [
                {path: route.township, label: 'Commune'},
                {path: '/commune/histoire', label: 'Histoire'},
                {path: '/commune/geographie', label: 'Géographie'},
                {path: '/commune/elus', label: 'Élus'},
                {path: '/commune/conseil-municipal', label: 'Conseil municipal'}
            ]
        },
        {
            path: '/projets',
            label: 'Projets et partenaires',
            showArrow: true,
            subItems: [
                {path: route.project, label: 'Projets'},
                {path: route.partner, label: 'Partenaires'},
                {path: route.association, label: 'Associations'}
            ]
        },
        {
            path: '/tourisme',
            label: 'Tourisme et loisirs',
            showArrow: true,
            subItems: [
                {path: route.tourism, label: 'Tourisme'},
                {path: route.leisure, label: 'Loisirs'}
            ]
        }
    ];

    useEffect(() => {
        // Simuler un chargement initial
        const loadingTimer = setTimeout(() => {
            setIsLoading(false);
        }, 2000);

        return () => clearTimeout(loadingTimer);
    }, []);

    useEffect(() => {
        const handleScroll = () => {
            setIsScrolled(window.scrollY > 20);
        };
        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    useEffect(() => {
        if (isMobileMenuOpen) {
            document.body.style.overflow = 'hidden';
        } else {
            document.body.style.overflow = 'unset';
        }
    }, [isMobileMenuOpen]);

    const isActive = (path) => {
        if (path === '/') {
            return location.pathname === '/';
        }
        return location.pathname.startsWith(path);
    };

    const isSubItemActive = (path) => {
        return location.pathname === path;
    };

    const isParentActive = (item) => {
        if (!item.subItems) return false;
        return item.subItems.some(subItem => location.pathname === subItem.path);
    };

    const handleMouseEnter = (path) => {
        clearTimeout(submenuTimer);
        setOpenSubmenu(path);
    };

    const handleMouseLeave = () => {
        setSubmenuTimer(setTimeout(() => setOpenSubmenu(''), 300));
    };

    const toggleMobileSubmenu = (path) => {
        setMobileSubmenu(mobileSubmenu === path ? '' : path);
    };

    if (isLoading) {
        return <NavbarShimmer/>;
    }

    return (
        <>
            <nav
                className={`fixed w-full z-50 transition-all duration-300 ${
                    isScrolled
                        ? 'bg-white shadow-lg py-2'
                        : 'bg-white/80 backdrop-blur-sm py-4'
                }`}
            >
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="flex items-center justify-between">
                        {/* Logo */}
                        <div className="flex-shrink-0">
                            <Link to="/" className="flex items-center space-x-3 group">
                                <img
                                    src={logo}
                                    alt="La Commune Logo"
                                    className="w-full h-full object-cover"
                                />
                            </Link>
                        </div>

                        {/* Desktop Navigation */}
                        <div className="hidden lg:flex items-center space-x-1">
                            {navItems.map((item) => (
                                <div
                                    key={item.path}
                                    className="relative group"
                                    onMouseEnter={() => handleMouseEnter(item.path)}
                                    onMouseLeave={handleMouseLeave}
                                >
                                    <Link
                                        to={item.subItems ? '#' : item.path}
                                        className={`relative text-gray-700 px-4 py-2.5 rounded-lg flex items-center hover:text-[#228B22] transition-colors duration-300 ${
                                            isActive(item.path) || isParentActive(item)
                                                ? 'text-[#228B22] font-medium bg-green-50'
                                                : ''
                                        }`}
                                        onClick={(e) => {
                                            if (item.subItems) {
                                                e.preventDefault();
                                            }
                                        }}
                                    >
                                        {item.label}
                                        {item.showArrow && (
                                            <KeyboardArrowDownIcon
                                                className={`ml-1 transform transition-transform duration-300 ${
                                                    openSubmenu === item.path ? 'rotate-180' : ''
                                                }`}
                                                fontSize="small"
                                            />
                                        )}
                                    </Link>
                                    {item.subItems && openSubmenu === item.path && (
                                        <div
                                            className="absolute top-full left-0 w-64 py-2 bg-white shadow-xl rounded-lg mt-1 border border-gray-100 transform transition-all duration-200">
                                            {item.subItems.map((subItem) => (
                                                <Link
                                                    key={subItem.path}
                                                    to={subItem.path}
                                                    className={`block px-4 py-2.5 text-gray-700 hover:bg-[#228B22] hover:text-white transition-colors duration-200 ${
                                                        isSubItemActive(subItem.path)
                                                            ? 'bg-green-50 text-[#228B22] font-medium'
                                                            : ''
                                                    }`}
                                                >
                                                    {subItem.label}
                                                </Link>
                                            ))}
                                        </div>
                                    )}
                                </div>
                            ))}
                            <Link
                                to="/contact"
                                className={`flex items-center space-x-2 px-5 py-2.5 rounded-xl bg-gradient-to-r from-[#228B22] to-[#1a6b1a] text-white hover:shadow-lg hover:shadow-[#228B22]/50 transition-all duration-300 ${
                                    location.pathname === '/contact' ? 'shadow-lg shadow-[#228B22]/50' : ''
                                }`}
                            >
                                <PhoneIcon fontSize="small"/>
                                <span className="font-medium">Contact</span>
                            </Link>
                        </div>

                        {/* Mobile menu button */}
                        <button
                            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
                            className="lg:hidden p-2 rounded-lg text-gray-600 hover:text-gray-900 hover:bg-gray-100 focus:outline-none"
                        >
                            {isMobileMenuOpen ? (
                                <CloseIcon className="h-6 w-6"/>
                            ) : (
                                <MenuIcon className="h-6 w-6"/>
                            )}
                        </button>
                    </div>
                </div>
            </nav>

            {/* Mobile Navigation Overlay */}
            <div
                className={`fixed inset-0 z-40 bg-black bg-opacity-50 transition-opacity duration-300 ${
                    isMobileMenuOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'
                }`}
                onClick={() => setIsMobileMenuOpen(false)}
            />

            {/* Mobile Navigation Menu */}
            <div
                className={`fixed top-0 right-0 h-full w-80 bg-white z-50 transform transition-transform duration-300 ease-in-out overflow-y-auto ${
                    isMobileMenuOpen ? 'translate-x-0' : 'translate-x-full'
                }`}
            >
                <div className="p-5">
                    <div className="flex justify-between items-center mb-8">
                        <span className="text-xl font-semibold text-gray-800">Menu</span>
                        <button
                            onClick={() => setIsMobileMenuOpen(false)}
                            className="p-2 rounded-lg text-gray-600 hover:text-gray-900 hover:bg-gray-100"
                        >
                            <CloseIcon/>
                        </button>
                    </div>

                    <div className="space-y-1">
                        {navItems.map((item) => (
                            <div key={item.path} className="border-b border-gray-100 last:border-0">
                                <div
                                    className={`flex items-center justify-between py-3 px-2 cursor-pointer ${
                                        isActive(item.path) || isParentActive(item)
                                            ? 'bg-green-50 rounded-lg'
                                            : ''
                                    }`}
                                    onClick={() => toggleMobileSubmenu(item.path)}
                                >
                                    <Link
                                        to={item.subItems ? '#' : item.path}
                                        className={`text-gray-700 ${
                                            isActive(item.path) || isParentActive(item)
                                                ? 'text-[#228B22] font-medium'
                                                : ''
                                        }`}
                                        onClick={(e) => {
                                            if (item.subItems) {
                                                e.preventDefault();
                                            } else {
                                                setIsMobileMenuOpen(false);
                                            }
                                        }}
                                    >
                                        {item.label}
                                    </Link>
                                    {item.showArrow && (
                                        <ChevronRightIcon
                                            className={`transform transition-transform duration-200 ${
                                                mobileSubmenu === item.path ? 'rotate-90' : ''
                                            }`}
                                        />
                                    )}
                                </div>
                                {item.subItems && mobileSubmenu === item.path && (
                                    <div className="pl-4 pb-3">
                                        {item.subItems.map((subItem) => (
                                            <Link
                                                key={subItem.path}
                                                to={subItem.path}
                                                className={`block py-2 px-3 text-gray-600 hover:text-[#228B22] ${
                                                    isSubItemActive(subItem.path)
                                                        ? 'text-[#228B22] font-medium bg-green-50 rounded-lg'
                                                        : ''
                                                }`}
                                                onClick={() => setIsMobileMenuOpen(false)}
                                            >
                                                {subItem.label}
                                            </Link>
                                        ))}
                                    </div>
                                )}
                            </div>
                        ))}
                        <Link
                            to="/contact"
                            className={`flex items-center justify-center space-x-2 px-5 py-3 mt-4 rounded-xl bg-gradient-to-r from-[#228B22] to-[#1a6b1a] text-white hover:shadow-lg hover:shadow-[#228B22]/50 transition-all duration-300 ${
                                location.pathname === '/contact' ? 'shadow-lg shadow-[#228B22]/50' : ''
                            }`}
                            onClick={() => setIsMobileMenuOpen(false)}
                        >
                            <PhoneIcon fontSize="small"/>
                            <span className="font-medium">Contact</span>
                        </Link>
                    </div>
                </div>
            </div>
        </>
    );
};

export default Navbar;