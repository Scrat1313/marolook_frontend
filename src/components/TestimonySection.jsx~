import React, {useState, useEffect} from 'react';
import {
    FormatQuote,
    Star,
    ArrowBack,
    ArrowForward,
    BusinessCenter,
    Person,
    VerifiedUser
} from '@mui/icons-material';

const testimonialData = [
    {
        id: 1,
        name: "Harilala",
        role: "Présidente nationale de l'EFOI",
        type: "particular",
        avatar: "https://i.pravatar.cc/150?img=21",
        content: "Nous avons fait appel à vos service pour notre mariage et nous n'aurions pas pu être plus heureux. Les photos sont incroyables et nous permettent de revivre chaque instant. Le professionnalisme et la gentillesse du photographe ont rendu cette journée encore plus spécial",
        rating: 5,
        date: "Janvier 2025"
    },
    {
        id: 2,
        name: "Madame Mirana",
        role: "Intervenant",
        type: "business",
        avatar: "https://i.pravatar.cc/150?img=22",
        content: "Une expérience exceptionnelle du début à la fin ! Le photographe a su capturer des moments magiques que nous chérirons pour toujours. La qualité des photos est tout simplement stupéfiante. Merci infiniment !",
        rating: 5,
        date: "Décembre 2024"
    },
    // {
    //     id: 3,
    //     name: "Jean Randria",
    //     role: "Entrepreneur",
    //     type: "business",
    //     avatar: "https://i.pravatar.cc/150?img=23",
    //     content: "L'équipe de la commune a été d'une aide exceptionnelle pour l'obtention de mon permis de construire. Un service public moderne et efficace !",
    //     rating: 4,
    //     date: "Janvier 2025"
    // },
    // {
    //     id: 4,
    //     name: "Sophie Ravalison",
    //     role: "Commerçante",
    //     type: "business",
    //     avatar: "https://i.pravatar.cc/150?img=24",
    //     content: "Les démarches en ligne ont considérablement simplifié la gestion de mon commerce. Un grand merci à l'équipe pour leur disponibilité !",
    //     rating: 5,
    //     date: "Janvier 2025"
    // },
    // {
    //     id: 5,
    //     name: "Paul Ratsima",
    //     role: "Résident",
    //     type: "particular",
    //     avatar: "https://i.pravatar.cc/150?img=25",
    //     content: "Je suis impressionné par la rapidité de traitement de mes demandes. Le nouveau système en ligne est vraiment pratique et intuitif.",
    //     rating: 5,
    //     date: "Décembre 2024"
    // }
];

const TestimonySection = () => {
    const [currentFilter, setCurrentFilter] = useState('all');
    const [currentIndex, setCurrentIndex] = useState(0);
    const [displayedTestimonials, setDisplayedTestimonials] = useState(testimonialData);
    const [isAnimating, setIsAnimating] = useState(false);

    useEffect(() => {
        const filtered = currentFilter === 'all'
            ? testimonialData
            : testimonialData.filter(item => item.type === currentFilter);
        setDisplayedTestimonials(filtered);
        setCurrentIndex(0);
    }, [currentFilter]);

    const handleNext = () => {
        if (isAnimating) return;
        setIsAnimating(true);
        setCurrentIndex((prev) => (prev + 1) % displayedTestimonials.length);
        setTimeout(() => setIsAnimating(false), 5);
    };

    const handlePrev = () => {
        if (isAnimating) return;
        setIsAnimating(true);
        setCurrentIndex((prev) =>
            prev === 0 ? displayedTestimonials.length - 1 : prev - 1
        );
        setTimeout(() => setIsAnimating(false), 5);
    };

    const renderStars = (rating) => (
        <div className="flex gap-1">
            {[...Array(5)].map((_, index) => (
                <Star
                    key={index}
                    className={`w-5 h-5 ${
                        index < rating
                            ? 'text-[#FF4B4B] animate-pulse'
                            : 'text-gray-300'
                    }`}
                />
            ))}
        </div>
    );

    return (
        <section className="relative py-12 md:py-24 bg-white text-gray-900 overflow-hidden">
            {/* Motif de fond */}
            <div className="absolute inset-0 opacity-5 hidden md:block">
                <div className="absolute inset-0" style={{
                    backgroundImage: 'radial-gradient(circle at 1px 1px, black 1px, transparent 0)',
                    backgroundSize: '40px 40px'
                }}/>
            </div>

            {/* Éléments décoratifs - cachés sur mobile */}
            <div className="absolute inset-0 overflow-hidden pointer-events-none hidden md:block">
                {/* ... (éléments décoratifs restent identiques) */}
            </div>

            <div className="max-w-7xl mx-auto px-4 relative">
                {/* En-tête moderne */}
                <div className="text-center mb-10 md:mb-20">
                    <div className="inline-block">
                        <span className="inline-block px-3 py-1 md:px-4 md:py-1 mb-4 text-[#FF4B4B]
                                       bg-[#FF4B4B]/10 rounded-full text-sm font-medium
                                       border border-[#FF4B4B]/20">
                            Témoignages vérifiés
                        </span>
                    </div>
                    <h2 className="text-3xl font-bold mb-4 md:mb-8 text-gray-900 px-2">
                        Ce qu'ils
                        <span className="relative inline-block ml-2 md:ml-4">
                            pensent
                            <div className="absolute -bottom-2 left-0 w-full h-1.5 md:h-2 bg-[#FF4B4B]
                                          rounded-full transform skew-x-12"/>
                        </span>
                    </h2>
                    <p className="text-gray-600 text-base md:text-lg max-w-2xl mx-auto px-4">
                        Découvrez les expériences authentiques de nos citoyens et entreprises
                    </p>
                </div>

                {/* Filtres améliorés - version mobile */}
                <div className="flex flex-wrap justify-center gap-2 md:gap-4 mb-8 md:mb-16 px-2">
                    {[
                        {id: 'all', label: 'Tous', mobileLabel: 'Tous', icon: <VerifiedUser/>},
                        {id: 'particular', label: 'Particuliers', mobileLabel: 'Particuliers', icon: <Person/>},
                        {id: 'business', label: 'Entreprises', mobileLabel: 'Pro', icon: <BusinessCenter/>}
                    ].map((filter) => (
                        <button
                            key={filter.id}
                            onClick={() => setCurrentFilter(filter.id)}
                            className={`
                                group relative px-4 md:px-8 py-2 md:py-3 rounded-xl font-medium 
                                transition-all duration-300 text-sm md:text-base
                                ${currentFilter === filter.id
                                ? 'text-white shadow-lg shadow-[#FF4B4B]/20 scale-105'
                                : 'bg-white text-gray-600 hover:text-[#FF4B4B] border border-gray-200'
                            }
                            `}
                        >
                            {currentFilter === filter.id && (
                                <div className="absolute inset-0 bg-gradient-to-r from-[#FF4B4B] to-[#E43D3D]
                                              rounded-xl -z-10"/>
                            )}
                            <div className="flex items-center gap-1.5 md:gap-2">
                                {React.cloneElement(filter.icon, {
                                    className: `w-4 h-4 md:w-5 md:h-5 ${
                                        currentFilter === filter.id
                                            ? 'text-white'
                                            : 'text-gray-500 group-hover:text-[#FF4B4B]'
                                    }`
                                })}
                                <span className="hidden md:inline">{filter.label}</span>
                                <span className="md:hidden">{filter.mobileLabel}</span>
                            </div>
                        </button>
                    ))}
                </div>

                {/* Carousel de témoignages */}
                {displayedTestimonials.length > 0 ? (
                    <div className="max-w-4xl mx-auto">
                        <div className={`transition-all duration-500 ${isAnimating ? 'opacity-0' : 'opacity-100'}`}>
                            {/* Carte de témoignage */}
                            <div className="relative bg-white rounded-xl md:rounded-2xl p-4 md:p-8
                                          shadow-lg hover:shadow-xl transition-all duration-300
                                          border border-gray-100 mx-2 md:mx-0">
                                {/* Avatar et badge de vérification */}
                                <div className="flex justify-center mb-6 md:mb-8">
                                    <div className="relative">
                                        <div className="w-16 h-16 md:w-24 md:h-24 rounded-full overflow-hidden
                                                      ring-4 ring-[#FF4B4B]/20">
                                            <img
                                                src={displayedTestimonials[currentIndex].avatar}
                                                alt={displayedTestimonials[currentIndex].name}
                                                className="w-full h-full object-cover"
                                            />
                                        </div>
                                        <div className="absolute -bottom-2 md:-bottom-3 left-1/2
                                                      transform -translate-x-1/2 bg-white rounded-full
                                                      px-2 md:px-3 py-0.5 md:py-1 shadow-lg">
                                            {renderStars(displayedTestimonials[currentIndex].rating)}
                                        </div>
                                    </div>
                                </div>

                                {/* Contenu du témoignage */}
                                <blockquote className="relative text-center mb-6 md:mb-8 px-2 md:px-8">
                                    <FormatQuote className="absolute top-0 left-0 w-6 h-6 md:w-8 md:h-8
                                                          text-[#FF4B4B]/20 transform -translate-x-full
                                                          -translate-y-full hidden md:block"/>
                                    <p className="text-gray-600 text-base md:text-lg leading-relaxed italic">
                                        {displayedTestimonials[currentIndex].content}
                                    </p>
                                    <FormatQuote className="absolute bottom-0 right-0 w-6 h-6 md:w-8 md:h-8
                                                          text-[#FF4B4B]/20 transform translate-x-full
                                                          translate-y-full hidden md:block"/>
                                </blockquote>

                                {/* Informations de l'auteur */}
                                <div className="text-center">
                                    <h3 className="text-lg md:text-xl font-bold text-gray-900">
                                        {displayedTestimonials[currentIndex].name}
                                    </h3>
                                    <p className="text-[#FF4B4B] font-medium text-sm md:text-base">
                                        {displayedTestimonials[currentIndex].role}
                                    </p>
                                    <p className="text-gray-500 text-xs md:text-sm mt-1">
                                        {displayedTestimonials[currentIndex].date}
                                    </p>
                                </div>
                            </div>

                            {/* Navigation */}
                            <div className="flex justify-center items-center gap-4 md:gap-6 mt-6 md:mt-8">
                                <button
                                    onClick={handlePrev}
                                    className="p-2 md:p-3 rounded-full bg-white shadow-lg hover:shadow-xl
                                             hover:scale-110 transition-all duration-300
                                             text-gray-600 hover:text-[#FF4B4B]"
                                    disabled={isAnimating}
                                >
                                    <ArrowBack className="w-5 h-5 md:w-6 md:h-6"/>
                                </button>
                                <div className="flex gap-1.5 md:gap-2">
                                    {displayedTestimonials.map((_, index) => (
                                        <button
                                            key={index}
                                            onClick={() => !isAnimating && setCurrentIndex(index)}
                                            className={`transition-all duration-300 ${
                                                index === currentIndex
                                                    ? 'w-6 md:w-8 h-1.5 md:h-2 bg-[#FF4B4B]'
                                                    : 'w-1.5 md:w-2 h-1.5 md:h-2 bg-gray-300 hover:bg-[#FF4B4B]/50'
                                            } rounded-full`}
                                        />
                                    ))}
                                </div>
                                <button
                                    onClick={handleNext}
                                    className="p-2 md:p-3 rounded-full bg-white shadow-lg hover:shadow-xl
                                             hover:scale-110 transition-all duration-300
                                             text-gray-600 hover:text-[#FF4B4B]"
                                    disabled={isAnimating}
                                >
                                    <ArrowForward className="w-5 h-5 md:w-6 md:h-6"/>
                                </button>
                            </div>
                        </div>
                    </div>
                ) : (
                    <div
                        className="text-center py-8 md:py-12 bg-white rounded-xl md:rounded-2xl shadow-lg mx-2 md:mx-0">
                        <p className="text-gray-600 text-sm md:text-base">
                            Aucun témoignage disponible pour cette catégorie.
                        </p>
                    </div>
                )}
            </div>
        </section>
    );
};

export default TestimonySection;